"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ClientsModule_1;
"use strict";
const common_1 = require("@nestjs/common");
const client_1 = require("./../client");
let ClientsModule = ClientsModule_1 = class ClientsModule {
    static register(options) {
        const clients = (options || []).map(item => ({
            provide: item.name,
            useValue: client_1.ClientProxyFactory.create(item),
        }));
        return {
            module: ClientsModule_1,
            providers: clients,
            exports: clients,
        };
    }
};
ClientsModule = ClientsModule_1 = __decorate([
    common_1.Module({})
], ClientsModule);
exports.ClientsModule = ClientsModule;
