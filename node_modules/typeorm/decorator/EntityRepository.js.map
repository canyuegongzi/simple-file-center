{"version":3,"sources":["../../src/decorator/EntityRepository.ts"],"names":[],"mappings":";;AAAA,yBAA2C;AAG3C;;;;GAIG;AACH,SAAgB,gBAAgB,CAAC,MAAiB;IAC9C,OAAO,UAAU,MAAgB;QAE7B,0BAAsB,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC7C,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACe,CAAC,CAAC;IACvC,CAAC,CAAC;AACN,CAAC;AARD,4CAQC","file":"EntityRepository.js","sourcesContent":["import {getMetadataArgsStorage} from \"../\";\nimport {EntityRepositoryMetadataArgs} from \"../metadata-args/EntityRepositoryMetadataArgs\";\n\n/**\n * Used to declare a class as a custom repository.\n * Custom repository can manage some specific entity or just be generic.\n * Custom repository optionally can extend AbstractRepository, Repository or TreeRepository.\n */\nexport function EntityRepository(entity?: Function): Function {\n    return function (target: Function) {\n\n        getMetadataArgsStorage().entityRepositories.push({\n            target: target,\n            entity: entity,\n        } as EntityRepositoryMetadataArgs);\n    };\n}\n"],"sourceRoot":".."}